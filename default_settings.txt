#
# Default settings for the simulation
# which uses the DisServiceRouter router
#

## Scenario settings
Scenario.name = epidemic_unicast_subscription
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
Scenario.endTime = 43200


## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second) 
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# The Interference model of the communication
# is chosen for each interface
btInterface.interferenceModel = NaiveInterferenceModel
# Transmit speed of 2.1Mbps (280KBps) for Bluetooth 2.0/2.1 + EDR (nominal rate is 3.0Mbps)
btInterface.transmitSpeed = 280k
btInterface.transmitRange = 100

# High speed, long range, interface for group 4
highspeedInterface.type = SimpleBroadcastInterface
# The Interference model of the communication
# is chosen for each interface
highspeedInterface.interferenceModel = NaiveInterferenceModel
# Transmit speed of 54 Mbps (equivalent to a net throughput of 31.4Mbps with CSMA/CA enabled) for 802.11g
# Theoretical throughput of 6.75MBps (with a net throughput of 3.925MBps) for 802.11g
# Theoretical approximate outdoor range of 140m (38m indoor) for 802.11g
# Theoretical approximate outdoor range of 250m (70m indoor) for 802.11n
highspeedInterface.transmitSpeed = 3.925M
highspeedInterface.transmitRange = 150

# Define 6 different node groups
Scenario.nrofHostGroups = 6

## Group-specific settings:
# groupID: Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl: TTL (minutes) of the messages created by this host group, default=infinite
#messagePriorityStrategy: accepatble values range from 0 to 3:
#               0 - random queue - default
#               1 - FIFO queue
#               2 - Prioritized FIFO queue (higher priority messages first)
#               3 - Prioritized LFF FIFO queue (Least Forwarded, higher prioriy, older messages First)
#messageForwardingOrderManager: accepatble values range from 0 to 1:
#               0 - FIFO Forwarding Manager - default
#               1 - Exponentially Decaying Probability (EDP) Forwarding Manager
#
#subDisMode: defines how subscriptions affect the dissemination strategy:
#               0 - strict (non-porous channels)
#               1 - semiPorous (semi-porous channels)
#               2 - flexible (subscriptions do not affect the dissemination strategy) - default
# maxSize: maximum number of subscriptions for which a node randomly sign up
# maxSubID: the highest ID allowed for a subscription
# subIDs: it specifies a comma-separated list of the subscription IDs the nodes of a group will subscribe to;
#         if subIDs is specified, any entry for maxSize is ignored (in every group if subIDs is specified
#         at the global level); a value of "-1" resets the global defaults specified for subIDs and reads
#         the value of maxSize.
#
#msgDissProbability: message dissemination probability - the probability of forwarding a message even if no
#                    neighbours belong to the same subscription of the message.
#msgAcceptProbability: message acceptance probability - the probability of storing a received message even if
#                      if the recipient node does not belong to the message subscription
#
#
## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all 
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
Group.movementModel = ShortestPathMapBasedMovement
#Group.router = EpidemicRouter
Group.router = EpidemicBroadcastRouterWithSubscriptions
#Group.router = SprayAndWaitRouter
#Group.router = SprayAndWaitRouterWithSubscriptions
#Group.router = ProphetRouterWithEstimation
#Group.router = DirectDeliveryRouter
Group.bufferSize = 5M
Group.waitTime = 0, 120
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface
# Walking speeds
Group.speed = 0.5, 1.5
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300
Group.messagePriorityStrategy = 2
Group.messageForwardingOrderManager = 1
Group.subDisMode = 1
# Common subscriptions for all groups
# If subIDs is specified, maxSize is ignored (maxSize used only for the random generation of subscriptions)
#Group.maxSize = 5
#Group.maxSubID = 10
Group.subIDs = 1,2,3,4,5
Group.nrofHosts = 40
Group.msgDissProbability = 0.3
Group.msgAcceptProbability = 0.5

# Settings for Spray n Wait router
SprayAndWaitRouterWithSubscriptions.nrofCopies = 10
SprayAndWaitRouterWithSubscriptions.binaryMode = true

# Settings for PROPHET router
ProphetRouterWithEstimation.timeScale = 60

# group1 (pedestrians) specific settings
Group1.groupID = p

# group2 specific settings
Group2.groupID = c
# cars can drive only on roads
Group2.okMaps = 1
# 10-50 km/h
Group2.speed = 2.7, 13.9

# another group of pedestrians
Group3.groupID = w

# The Tram groups
Group4.groupID = t
Group4.bufferSize = 50M
Group4.movementModel = MapRouteMovement
Group4.routeFile = data/tram3.wkt
Group4.routeType = 1
Group4.waitTime = 10, 30
Group4.speed = 7, 10
Group4.nrofHosts = 2
Group4.nrofInterfaces = 2
Group4.interface1 = btInterface
Group4.interface2 = highspeedInterface
# subIDs = -1 resets the global defaults and read the value of maxSize; maxSize = 0 implies no subscriptions 
#Group4.maxSize = 0
#Group4.subIDs = -1

Group5.groupID = t
Group5.bufferSize = 50M
Group5.movementModel = MapRouteMovement
Group5.routeFile = data/tram4.wkt
Group5.routeType = 2
Group5.waitTime = 10, 30
Group5.speed = 7, 10
Group5.nrofHosts = 2
Group5.nrofInterfaces = 2
Group5.interface1 = btInterface
Group5.interface2 = highspeedInterface
# subIDs = -1 resets the global defaults and read the value of maxSize; maxSize = 0 implies no subscriptions
#Group5.maxSize = 0
#Group5.subIDs = -1

Group6.groupID = t
Group6.bufferSize = 50M
Group6.movementModel = MapRouteMovement
Group6.routeFile = data/tram10.wkt
Group6.routeType = 2
Group6.waitTime = 10, 30
Group6.speed = 7, 10
Group6.nrofHosts = 2
Group6.nrofInterfaces = 2
Group6.interface1 = btInterface
Group6.interface2 = highspeedInterface
# subIDs = -1 resets the global defaults and read the value of maxSize; maxSize = 0 implies no subscriptions
#Group6.maxSize = 0
#Group6.subIDs = -1


## Message creation parameters 
# How many event generators
Events.nrof = 1
# Class of the first event generator
# PrioritizedMessageEventGenerator generates messages with a random priority
Events1.class = MessageEventGenerator
Events1.rndSeed = 1
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 45 to 60 seconds)
Events1.interval = 25,30
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = 0,125
# Message ID prefix
Events1.prefix = M
# Message priorities range; allowed values are in the range (0.0, 1). Do not
# use 0.0 and 1.0, as those values are automatically added to the list
# (first and last element). N specified values produce N+1 priority slots
#Events1.prioritySlots = 0.65, 0.9


## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 4
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
# PrioritizedMessageStatsReport reports stats for priority-based routers
Report.report1 = PrioritizedMessageStatsReport
Report.report2 = CSVMessageWithSubscriptionsDeliveryReport
Report.report3 = CSVMessageWithSubscriptionsDropReport
Report.report4 = MessagesWithSubscriptionsStatsReport

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$